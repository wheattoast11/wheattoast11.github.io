{"version":3,"file":"animation-JDWQbIzs.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.12.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.12.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.12.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","definition","custom","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","mixNumber","hueToRgb","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","reactExports","layoutProjection","combined","getProjectionFunctionality","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233]}